### This is a number of microbenchmarks that are mostly per-based. They evaluate
### the performance and scalability of a number of IPC primitives.

export MMTESTS="ipcscale-sysvsempp"

# List of monitors
export RUN_MONITOR=yes
export MONITORS_ALWAYS=
export MONITORS_GZIP="proc-vmstat mpstat"
export MONITORS_WITH_LATENCY="vmstat"
export MONITOR_UPDATE_FREQUENCY=10

# futexbench
export FUTEXBENCH_MIN_THREADS=2
export FUTEXBENCH_MAX_THREADS=$((NUMCPUS*64))
export FUTEXBENCH_SHARED=no

# IPCScale
#  threads per core, no more than two make sense.
#  Iterations will be bounded by NR_CPUS * [MIN_THREADS, MAX_THREADS]
#  hard limits -- increments in such ranges are left to the ipcscale
#  program.
export IPCSCALE_MIN_THREADS=1
export IPCSCALE_MAX_THREADS=1
export IPCSCALE_COMPLEXOPS=4
export IPCSCALE_ITERATIONS=3
export IPCSCALE_RUNTIME=5 # secs

# sembench
export SEMBENCH_MIN_THREADS=2
export SEMBENCH_MAX_THREADS=$((NUMCPUS*64))

# futexwait
export FUTEXWAIT_ITERATIONS=5
export FUTEXWAIT_MIN_THREADS=2
export FUTEXWAIT_MAX_THREADS=$((NUMCPUS*64))

# filelockperf
export FILELOCKPERF_ITERATIONS=10
export FILELOCKPERF_MIN_THREADS=2
export FILELOCKPERF_MAX_THREADS=$((NUMCPUS*8))
export FILELOCKPERF_LOCKITERS=1024 # number of times each thread does a lock/unlock pair.
 # single: single file for all tasks
 # multi: each task deals with its own file
export FILELOCKPERF_LOCKTYPES="single,multi"
